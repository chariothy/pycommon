# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  push:
    branches: [ master ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set output
      id: vars
      run: |
        echo ::set-output name=date::$(date +'%Y%m%d')
        echo ::set-output name=tag::${GITHUB_REF/refs\/tags\//}
        echo ::set-output name=rep::$(echo $GITHUB_REPOSITORY | sed 's/-docker$//')

    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine anaconda-client
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USER }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_TOKEN }}
      run: |
        python setup.py sdist bdist_wheel
        twine upload --verbose dist/*
        anaconda upload --no-progress -p chariothy-common -v 0.1.54 -s "Common code for chariothy" -d "Common code for chariothy" dist/*
